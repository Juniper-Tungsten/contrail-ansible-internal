---
- name: resolve platform specific vars
  include_vars: "{{item}}"
  with_first_found:
    - "{{ansible_distribution}}-{{ansible_distribution_release}}.yml"
    - "{{ansible_distribution}}.yml"
    - "{{ansible_os_family}}.yml"

- name: install utils for fiddling with ethernet bridges...
  become: yes
  become_user: root
  with_items:
    - bridge-utils
  package: name={{item}} state=present
  when: docker_network_bridge

- name: Include docker_install_method specific code
  include: "{{ docker_install_method }}.yml"

- name: Adding EnvironmentFile to docker systemd file
  #EnvironmentFile=-/etc/sysconfig/docker
  ini_file: dest=/usr/lib/systemd/system/docker.service section=Service option=EnvironmentFile value="{{ docker_env_file }}" create=no
  when: ansible_service_mgr == "systemd"
  ignore_errors: yes
  notify:
    - reload systemd
    - restart docker

- name: Adding EnvironmentFile to docker systemd file
  #EnvironmentFile=-/etc/sysconfig/docker
  ini_file: dest=/lib/systemd/system/docker.service section=Service option=EnvironmentFile value="{{ docker_env_file }}" create=no
  when: ansible_service_mgr == "systemd"
  ignore_errors: yes
  notify:
    - reload systemd
    - restart docker

- name: Adding DOCKER OPTIONS for docker init scripts
  lineinfile: dest="{{ docker_env_file }}"
              line="{{ docker_options_var }}={{ docker_opts }}"
              regexp="^{{ docker_options_var }}="
              state=present
              create=yes
  notify: restart docker

- name: create root user docker config directory
  become: yes
  become_user: root
  file: >-
    path=/root/.docker
    state=directory
    mode=0700

- name: configuring docker access for the root user...
  become: yes
  become_user: root
  when: docker_remote and docker_tls
  with_items:
    - {f: '{{docker_pki_cert_src}}', t: cert.pem, m: '0600'}
    - {f: '{{docker_pki_ca_cert_src}}', t: ca.pem, m: '0600'}
    - {f: '{{docker_pki_key_src}}', t: key.pem, m: '0400'}
  copy: >-
    src={{item.f}}
    dest=/root/.docker/{{item.t}}
    mode={{item.m}}
  notify: restart docker

- name: write /etc/profile.d/docker.sh
  become: yes
  become_user: root
  with_items:
    - etc/profile.d/docker.sh
  template: >-
    src={{item}}.j2
    dest=/{{item}}
    mode=0644

- name : launch docker...
  become: yes
  become_user: root
  service: name=docker state=started enabled=yes

- meta: flush_handlers
