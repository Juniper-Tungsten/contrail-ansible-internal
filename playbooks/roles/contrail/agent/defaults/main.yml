---
agent_packages_redhat:
  - contrail-vrouter-common
  - contrail-vrouter-utils
  - contrail-lib
  - contrail-utils
  - python-contrail-vrouter-api
  - python-opencontrail-vrouter-netns
  - contrail-vrouter-agent
  - contrail-vrouter
  - contrail-vrouter-init
  - contrail-nodemgr
  - python-yaml
  - rsync
  - curl
  - haproxy
  - iptables
  - tcpdump

agent_packages_ubuntu:
  - contrail-vrouter-dkms
  - contrail-vrouter-common
  - contrail-vrouter-utils
  - contrail-lib
  - contrail-utils
  - python-contrail-vrouter-api
  - python-opencontrail-vrouter-netns
  - contrail-vrouter-agent
  - contrail-vrouter-init
  - contrail-nodemgr
  - python-yaml
  - rsync
  - curl
  - haproxy
  - iptables
  - tcpdump

compile_vrouter_module: true
reload_vrouter_module: false
nodemanager_conf: "/etc/contrail/contrail-vrouter-nodemgr.conf"
vrouter_physical_ansible_interface: "ansible_{{ vrouter_physical_interface_orig | regex_replace('-', '_') }}"
vhost_interface: vhost0

# vhost_ansible_interface is ansible_{{vhost_interface}} in case of vhost0 is
# added, otherwise it is vrouter_physical_ansible_interface
vhost_ansible_interface: "{{ 'ansible_' + vhost_interface if vhost_interface in ansible_interfaces else vrouter_physical_ansible_interface }}"

vhost_address: "{{ hostvars[inventory_hostname][vhost_ansible_interface]['ipv4']['address'] }}"
vhost_netmask: "{{ hostvars[inventory_hostname][vhost_ansible_interface]['ipv4']['netmask'] }}"
vhost_network: "{{ hostvars[inventory_hostname][vhost_ansible_interface]['ipv4']['network'] }}"

vrouter_physical_interface_mac_address: "{{ hostvars[inventory_hostname][vrouter_physical_ansible_interface]['macaddress'] }}"
vhost_address_with_netmask: "{{ vhost_address }}/{{ vhost_netmask }}"
vhost_address_with_prefix: "{{ vhost_address_with_netmask | ipaddr('host/prefix') }}"
vhost_gateway: "{{ ansible_default_ipv4.gateway }}"

vrouter_agent_conf: "/etc/contrail/contrail-vrouter-agent.conf"
vrouter_platform: default
vrouter_agent_log: /var/log/contrail/contrail-vrouter-agent.log
vrouter_agent_log_level: "{{ log_level }}"

vrouter_max_control_nodes: 3
contrail_compute_mode: "container"
supervisor_vrouter_ready: false
gateway_mode: ''
non_mgmt_ip: ''
non_mgmt_gw: ''

kubernetes_token: ''
kubernetes_api_port: "{{ 8443 if cloud_orchestrator == 'openshift' else 8080 }}"
kubernetes_api_secure_port: "{{ 8443 if cloud_orchestrator == 'openshift' else 6443 }}"

# qos scheduling default configs
priority_id_config: ''
priority_scheduling_config: ''
priority_bandwidth_config: ''

# qos queueing default configs
qos_queue_id_config: ''
qos_logical_queue_config: ''
qos_priority_tagging_config: ''

# vgw defaults
vgw_public_subnet_config: ''
vgw_public_vn_name_config: ''
vgw_intf_list_config: ''
vgw_gateway_routes_config: ''

# vrouter module params
vrouter_module_params: ''

# List of controller nodes for a compute node
compute_controller_list: ''

# Metadata Service SSL Enable/Disable
metadata_ssl_enable: false

vgw_public_subnet_list: []
vgw_public_vn_name_list: []
vgw_intf_list: []
vgw_gateway_route_list: []

qos_priority_tagging: ''
qos_logical_queue_list: []
qos_default_nic_queue: ''
qos_queue_id_list: []

priority_id_list: []
priority_scheduling_list: []
priority_bandwidth_list: []
