global
  tune.maxrewrite {{ tune_maxrewrite }}
  tune.bufsize {{ tune_bufsize }}
  log /dev/log  local0
  log /dev/log  local1 notice
{% if haproxy_socket != '' %}
  stats socket {{ haproxy_socket }} level admin
{% endif %}
{% if haproxy_chroot != '' %}
  chroot {{ haproxy_chroot }}
{% endif %}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
{% for global_var in haproxy_global_vars %}
  {{ global_var }}
{% endfor %}

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
{% if haproxy_version == '1.4' %}
        contimeout 5000
        clitimeout 50000
        srvtimeout 50000
{% else %}
        timeout connect 5000
        timeout client 50000
        timeout server 50000
{% endif %}
{% if ansible_os_family == 'Debian' %}
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http
{% endif %}

frontend stats
    bind *:{{ stats_port }}
    mode http
    stats enable
    stats uri /
{%  if haproxy_auth_user and haproxy_auth_password -%}
    stats auth {{ haproxy_auth_user }}:{{ haproxy_auth_password }}
{%- endif %}

frontend contrail-api
{% if apiserver_auth_protocol == 'https' %}
    bind *:{{ contrail_api_frontend_port }} ssl crt {{ apiserver_certbundle }}
{% else %}
    bind *:{{ contrail_api_frontend_port }}
{% endif %}
    default_backend    contrail-api-backend
    timeout client 3m

backend contrail-api-backend
    option nolinger
    timeout server 3m
    balance roundrobin
{% if apiserver_auth_protocol == 'https' %}
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
{% endif %}
{% for contrail_api_ip in contrail_api_server_list %}
    server {{ contrail_api_ip }} {{ contrail_api_ip }}:{{ contrail_api_backend_port }} check inter {{ check_interval }} rise 2 fall 3
{% endfor %}

frontend contrail-analytics-api
    bind *:{{ contrail_analytics_api_frontend_port }}
    default_backend    contrail-analytics-api-backend

backend contrail-analytics-api-backend
    option nolinger
    balance roundrobin
{% for analytics_api_ip in contrail_analytics_api_list %}
    server {{ analytics_api_ip }} {{ analytics_api_ip }}:{{ contrail_analytics_api_backend_port }} check inter {{ check_interval }} rise 2 fall 3
{% endfor %}
