---
cloud_orchestrator: openstack
# controller_nodes is comma separated ips of controllers
controller_nodes: ''
controller_list: "{{ controller_nodes.split(',') if controller_nodes else [ ansible_default_ipv4.address ] }}"
controller_ip: "{{ controller_list[0] }}"

# config_nodes is comma separated ips of config servers, if not provided, controller_list is used
config_nodes: ''
config_server_list: "{{ config_nodes.split(',') if config_nodes else controller_list }}"
contrail_api_server_list: "{{ config_server_list }}"

# Support bootstrap clusters while add/remove nodes
config_seeds: ''
config_seed_list: "{{ config_seeds.split(',') if config_seeds else config_server_list }}"

# Analytics dB defaults
# analyticsdb_nodes is  comma separated ips of analytics servers, if not provided, controller_list is used
analyticsdb_nodes: ''
analyticsdb_list: "{{ analyticsdb_nodes.split(',') if analyticsdb_nodes else controller_list }}"
analyticsdb_port: 9160
analyticsdb_cql_port: 9042
analyticsdb_cassandra_user: ''
analyticsdb_cassandra_password: ''
# external_configdb_servers - are list of cassandra servers managed externally
external_configdb_servers: ''
configdb_servers: ''
# external_configdb_servers to be used as configdb_server_list if it is set
configdb_server_list: "{{ external_configdb_servers.split(',') if external_configdb_servers else \
                        (configdb_servers.split(',') if configdb_servers else config_server_list) }}"

# Support bootstrap clusters while add/remove nodes
configdb_seed_nodes: "{{ config_seed_list }}"
configdb_port: 9161
configdb_cql_port: 9041
configdb_rmi_port: 7198
configdb_storage_port: 7010
configdb_ssl_storage_port: 7011

# List of zookeeper servers
# external_zookeeper_servers - are list of zookeeper servers managed externally
external_zookeeper_servers: ''
zk_server_list: "{{ external_zookeeper_servers.split(',') if external_zookeeper_servers else config_server_list }}"
zk_port: 2181

# List of rabbitmq servers
# external_rabbitmq_servers - are list of rabbitmq servers managed externally
external_rabbitmq_servers: ''
# external_rabbitmq_servers to be used as rabbitmq_server_list if it is set
rabbitmq_server_list: "{{ external_rabbitmq_servers.split(',') if external_rabbitmq_servers else config_server_list }}"
rabbitmq_port: 5672
rabbitmq_user: guest
rabbitmq_password: guest

config_ip: "{{ controller_ip }}"
api_server_ip: "{{ config_ip }}"
api_server_port: 8082
api_server_admin_port: 8095
api_server_use_ssl: False
region: RegionOne

# Analytics defaults
# Analytics node list, defaults to controller node list.
analytics_nodes: ''
analytics_list: "{{ analytics_nodes.split(',') if analytics_nodes else controller_list }}"
contrail_analytics_api_list: "{{ analytics_list }}"
analytics_ip: "{{ controller_ip }}"
analytics_server_ip: "{{ analytics_ip }}"
analytics_server_port: 8081
analytics_server_use_ssl: False

analytics_collector_port: 8086

kafka_broker_list: "{{ analyticsdb_list }}"
kafka_port: 9092

# Control node configs
control_node_list: "{{ controller_list }}"
controlnode_ip: "{{ controller_ip }}"
control_ip: "{{ controlnode_ip }}"
control_xmpp_port: 5269
control_dns_port: 53
# Common log level and log_local
log_level: SYS_NOTICE
log_local: 1

# Redis Config
# Note: All apps used to connect redis server running on local machine, so redis_server_ip is not required, and
#  it should default to localhost
redis_server_ip: 127.0.0.1
redis_server_port: 6379
redis_password: ''

# Keystone defaults
keystone_version: v2.0
keystone_ip: "{{ controller_ip }}"
keystone_admin_port: 35357
keystone_public_port: 5000
keystone_auth_protocol: http
keystone_admin_user: admin
keystone_admin_password: admin
keystone_admin_tenant: admin
keystone_insecure: False
keystone_certfile: /etc/contrailctl/ssl/server.pem
keystone_keyfile: /etc/contrailctl/ssl/server-privkey.pem
keystone_cafile: /etc/contrailctl/ssl/ca-cert.pem

neutron_metadata_ip: "{{ keystone_ip }}"
neutron_metadata_port: 8775

glance_api_ip: "{{ keystone_ip }}"
nova_api_ip: "{{ keystone_ip }}"

provision_cmd_keystone_args: " --admin_user {{ keystone_admin_user }} --admin_password {{ keystone_admin_password }} --admin_tenant_name {{ keystone_admin_tenant }} "
service_tenant_name: services
# Vnc api client input file
vncapi_conf: "/etc/contrail/vnc_api_lib.ini"

# Keystone auth conf file
keystone_auth_conf: "/etc/contrail/contrail-keystone-auth.conf"

systemd_wants_files: []
apt_update: true

xmpp_auth_enable: false
xmpp_dns_auth_enable: false

# Sandesh defaults
sandesh_ssl_enable: false
introspect_ssl_enable: false
sandesh_keyfile: "/etc/contrail/ssl/private/server-privkey.pem"
sandesh_certfile: "/etc/contrail/ssl/certs/server.pem"
sandesh_ca_cert: "/etc/contrail/ssl/certs/ca-cert.pem"

ssl_certs_src_dir: "/etc/contrailctl/ssl"
ssl_certs_dir: "/etc/contrail/ssl"
# nested_mode is to define whether it is nested mode kubernetes setup or not
nested_mode: false

# ApiServer SSL defaults
apiserver_auth_protocol: http
apiserver_insecure: False
apiserver_certfile: /etc/contrailctl/ssl/server.pem
apiserver_keyfile: /etc/contrailctl/ssl/server-privkey.pem
apiserver_cafile: /etc/contrailctl/ssl/ca-cert.pem
apiserver_certbundle: /etc/contrailctl/ssl/apiservercertbundle.pem
