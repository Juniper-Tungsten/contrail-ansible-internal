---
- name: Check if cassandra listen address is modified
  command: 'grep -Fxq "listen_address: {{ cassandra_listen_address }}" {{ cassandra_conf_dir }}/cassandra.yaml'
  register: listen_address_changed
  ignore_errors: True
  always_run: True

- name: Stop Cassandra if listen_address is modified so system data can be cleaned
  service: name={{ cassandra_service_name }} state=stopped
  when: listen_address_changed.rc != 0

- name: Cleanup System Data of Cassandra if listen_address is modified
  file: path=/var/lib/cassandra/data/system/ state=absent
  when: listen_address_changed.rc != 0

- name: Install Cassandra config file
  template: src=cassandra-{{cassandra_version_branch}}.j2 dest={{ cassandra_conf_dir }}/cassandra.yaml
  notify: restart cassandra

- name: Install Cassandra DC config file
  template: src=cassandra-topology.yml.j2 dest={{ cassandra_conf_dir }}/cassandra-topology.yml
  notify: restart cassandra

- name: Install Cassandra Java Config File
  template: src=cassandra-{{cassandra_version_branch}}-env.j2 dest={{ cassandra_conf_dir }}/cassandra-env.sh
  notify: restart cassandra

- name: Install log4j config file
  template: src=log4j-server.properties.j2 dest={{ cassandra_conf_dir }}/log4j-server.properties
  notify: restart cassandra

- meta: flush_handlers

# previous cassandra restart just fail with some nullpointer exception
# Another restart after waiting some time fix that (without wait,
# it was failing again). Even though it fail, systemd take it as normal
# exit and thus service cassandra start doesnt work and that in service.yml
# is not fixing it. So it needed a restart itself.
# Below two tasks are workaround for above mentioned issue
- pause: seconds=20

- name: restart cassandra
  service: name={{ cassandra_service_name }} state=restarted
  when: listen_address_changed.rc != 0
