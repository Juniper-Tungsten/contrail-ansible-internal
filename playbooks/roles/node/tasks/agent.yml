---
- name: resolve platform specific vars
  include_vars: "{{item}}"
  with_first_found:
    - files:
      - "{{ansible_distribution}}-{{ansible_distribution_release}}.yml"
      - "{{ansible_distribution}}.yml"
      - "{{ansible_os_family}}.yml"
      skip: true

- name: Install kernel headers to compile vrouter module
  package: name="{{ item }}" state=present
  with_items: "{{ kernel_source_packages }}"

- name: override vrouter_physical_interface in case set in host_vars
  set_fact:
    agent_config_orig: "{{ agent_config_orig | combine({'vrouter_physical_interface': vrouter_physical_interface})}}"
  when: vrouter_physical_interface is defined

- name: Configure GLOBAL section of contrailctl/agent.conf
  ini_file: dest="{{ contrailctl_config_directory }}/agent.conf" section=GLOBAL option={{ item.key }} value={{ item.value }}  create=yes
  with_dict: "{{ global_config_orig | combine(agent_config_orig) }}"

- name: Copy vrouter compiler image
  copy:
    src: "{{ docker_image_load_path }}/{{ vrouter_module_compiler_redhat7_image_archive }}"
    dest: "/tmp/{{ vrouter_module_compiler_redhat7_image_archive }}"
  when: docker_registry is not defined or load_contrail_vrouter_module_compiler_redhat7_image is defined

- name: "Load vrouter compiler image"
  docker_image:
    name: vrouter-module-compiler-redhat7
    tag: "{{ contrail_version }}"
    load_path: "/tmp/{{ vrouter_module_compiler_redhat7_image_archive }}"
  when: docker_registry is not defined or load_vrouter_module_compiler_redhat7_image is defined

- name: "Compile vrouter module"
  docker_container:
    name: vrouter-compiler
    image: "{{ vrouter_compiler_image_redhat7 }}"
    privileged: true
    state: started
    tty: true
    pull: "{{ always_pull_image }}"
    detach: true
    cleanup: true
    capabilities:
      - AUDIT_WRITE
    env:
      INSTALL_VROUTER_MODULE: true
    volumes:
      - "/lib/modules:/lib/modules"
      - "/usr/src/kernels:/usr/src/kernels"
  when: external_vrouter_compile and ansible_os_family == 'RedHat'

- name: "Fail if external_vrouter_compile is true and unsupported OS family"
  shell: "echo 'Unsupported OS family for external vrouter compilation {{ ansible_os_family }}';false"
  when: external_vrouter_compile and ansible_os_family != 'RedHat'

- name: Wait till vrouter module is installed
  wait_for: path="/lib/modules/{{ ansible_kernel }}/kernel/net/contrail/vrouter.ko" state=present
  when: external_vrouter_compile and ansible_os_family == 'RedHat'

- name: Copy contrail vrouter agent image
  copy:
    src: "{{ docker_image_load_path }}/{{ contrail_agent_image_archive }}"
    dest: "/tmp/{{ contrail_agent_image_archive }}"
  when: docker_registry is not defined or load_contrail_agent_image is defined

- name: "Copy contrailctl/agent.conf"
  copy: src={{ item }} dest={{ contrailctl_config_directory }}
  with_first_found:
    - files:
      - "{{ contrailctl_config_source |ternary(contrailctl_config_source + '/agent.conf', 'contrailctl/agent.conf') }}"
      - contrailctl/agent.conf
      - "{{ playbook_dir }}/contrailctl/agent.conf"
      - /etc/contrailctl/agent.conf
      skip: true
  when: contrailctl_external_configured

- name: "Load contrail vrouter agent image"
  docker_image:
    name: contrail-agent
    tag: "{{ contrail_version }}"
    load_path: "/tmp/{{ contrail_agent_image_archive }}"
  when: docker_registry is not defined or load_contrail_agent_image is defined

- name: "Start contrail agent container"
  docker_container:
    name: agent
    image: "{{ agent_image }}"
    privileged: true
    network_mode: host
    state: started
    tty: true
    restart_policy: unless-stopped
    restart_retries: 3
    pull: "{{ always_pull_image }}"
    capabilities:
      - AUDIT_WRITE
    volumes:
      - "/lib/modules:/lib/modules"
      - "/usr/src:/usr/src"
      - "{{ contrailctl_config_directory }}:/etc/contrailctl/"
